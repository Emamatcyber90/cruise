#!/bin/sh

CP_WRAPPERS="-Wl,-u,MPI_Wtime,-wrap,write,-wrap,open,-wrap,creat,-wrap,creat64,-wrap,open64,-wrap,close,-wrap,unlink,-wrap,truncate,-wrap,rename,-wrap,read,-wrap,lseek,-wrap,lseek64,-wrap,pread,-wrap,pwrite,-wrap,readv,-wrap,writev,-wrap,__xstat,-wrap,__lxstat,-wrap,__fxstat,-wrap,__xstat64,-wrap,__lxstat64,-wrap,__fxstat64,-wrap,mmap,-wrap,mmap64,-wrap,fopen,-wrap,fclose,-wrap,fread,-wrap,fwrite,-wrap,fseek,-wrap,fopen64,-wrap,pread64,-wrap,pwrite64,-wrap,fsync,-wrap,fdatasync,-wrap,mkdir,-wrap,rmdir"
SCRMFS_LIB_PATH="/home/rajachan/memfs/runtime/install/lib"
SCRMFS_LD_FLAGS=""

# NOTE:
# - we deliberately list libscrmfs-mpi-io twice in the link command.  The
#   first is necessary to correctly use the MPI profiling interface.  The
#   final one is necessary to give the linker a change to resolve indirect
#   dependencies on PnetCDF and HDF5 symbols (if the app used a library which 
#   in turn used one of those HLLs).
PRE_LD_FLAGS="-L$SCRMFS_LIB_PATH $SCRMFS_LD_FLAGS -lz $CP_WRAPPERS"
POST_LD_FLAGS="-L$SCRMFS_LIB_PATH -lscrmfs-posix"


usage="\
Usage: scrmfs-config [--pre-ld-flags] [--post-ld-flags]"

if test $# -eq 0; then
      echo "${usage}" 1>&2
      exit 1
fi

while test $# -gt 0; do
  case "$1" in
  -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
  *) optarg= ;;
  esac

  case $1 in
    --pre-ld-flags)
      echo $PRE_LD_FLAGS
      ;;
    --post-ld-flags)
      echo $POST_LD_FLAGS
      ;;
    *)
      echo "${usage}" 1>&2
      exit 1
      ;;
  esac
  shift
done
